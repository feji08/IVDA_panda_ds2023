{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Plotly from 'plotly.js/dist/plotly';\nexport default {\n  name: \"ScatterPlot\",\n  props: [\"selectedCategory\"],\n  data: () => ({\n    ScatterPlotData: {\n      x: [],\n      y: []\n    }\n  }),\n  mounted() {\n    this.fetchData();\n  },\n  watch: {\n    selectedCategory: function () {\n      this.ScatterPlotData.x = [];\n      this.ScatterPlotData.y = [];\n      this.fetchData();\n    }\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve companies from backend\n      var reqUrl = 'http://127.0.0.1:5000/companies';\n      console.log(\"ReqURL \" + reqUrl);\n      // await response and data\n      const response = await fetch(reqUrl);\n      const responseData = await response.json();\n      // transform data to usable by scatterplot\n      responseData.forEach(company => {\n        this.ScatterPlotData.x.push(company.employees);\n        this.ScatterPlotData.y.push(company.founding_year);\n      });\n      // after the data is loaded, draw the plot\n      this.drawScatterPlot();\n    },\n    drawScatterPlot() {\n      var trace1 = {\n        x: this.ScatterPlotData.x,\n        y: this.ScatterPlotData.y,\n        mode: 'markers',\n        type: 'scatter'\n      };\n      var data = [trace1];\n      var layout = {};\n      var config = {\n        responsive: true,\n        displayModeBar: false\n      };\n      Plotly.newPlot('myScatterPlot', data, layout, config);\n    }\n  }\n};","map":{"version":3,"names":["Plotly","name","props","data","ScatterPlotData","x","y","mounted","fetchData","watch","selectedCategory","methods","reqUrl","console","log","response","fetch","responseData","json","forEach","company","push","employees","founding_year","drawScatterPlot","trace1","mode","type","layout","config","responsive","displayModeBar","newPlot"],"sources":["/Users/ritawang/Documents/UZH FALL/IVDA/A1/example-project/services/frontend/src/components/ScatterPlot.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row align=\"center\" justify=\"center\" class=\"mt-1 mb-0\">\n      <h3>Overview of Companies</h3>\n    </v-row>\n    <div style=\"height: 90vh\">\n      <div id='myScatterPlot' style=\"height: inherit\"></div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Plotly from 'plotly.js/dist/plotly';\nexport default {\n  name: \"ScatterPlot\",\n  props: [\n    \"selectedCategory\"\n  ],\n  data: () => ({\n    ScatterPlotData: {x: [], y: []}\n  }),\n  mounted() {\n    this.fetchData()\n  },\n  watch: {\n    selectedCategory: function () {\n      this.ScatterPlotData.x = [];\n      this.ScatterPlotData.y = [];\n\n      this.fetchData();\n    }\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve companies from backend\n      var reqUrl = 'http://127.0.0.1:5000/companies'\n      console.log(\"ReqURL \" + reqUrl)\n      // await response and data\n      const response = await fetch(reqUrl)\n      const responseData = await response.json();\n      // transform data to usable by scatterplot\n      responseData.forEach((company) => {\n        this.ScatterPlotData.x.push(company.employees)\n        this.ScatterPlotData.y.push(company.founding_year)\n      })\n      // after the data is loaded, draw the plot\n      this.drawScatterPlot()\n    },\n    drawScatterPlot() {\n      var trace1 = {\n        x: this.ScatterPlotData.x,\n        y: this.ScatterPlotData.y,\n        mode: 'markers',\n        type: 'scatter'\n      };\n      var data = [trace1];\n      var layout = {}\n      var config = {responsive: true, displayModeBar: false}\n      Plotly.newPlot('myScatterPlot', data, layout, config);\n    }\n  }\n}\n</script>\n\n\n\n<style scoped>\n\n</style>"],"mappings":";AAaA,OAAOA,MAAK,MAAO,uBAAuB;AAC1C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,CACL,kBAAiB,CAClB;EACDC,IAAI,EAAEA,CAAA,MAAO;IACXC,eAAe,EAAE;MAACC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE;EAChC,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC;EACjB,CAAC;EACDC,KAAK,EAAE;IACLC,gBAAgB,EAAE,SAAAA,CAAA,EAAY;MAC5B,IAAI,CAACN,eAAe,CAACC,CAAA,GAAI,EAAE;MAC3B,IAAI,CAACD,eAAe,CAACE,CAAA,GAAI,EAAE;MAE3B,IAAI,CAACE,SAAS,CAAC,CAAC;IAClB;EACF,CAAC;EACDG,OAAO,EAAE;IACP,MAAMH,SAASA,CAAA,EAAG;MAChB;MACA,IAAII,MAAK,GAAI,iCAAgC;MAC7CC,OAAO,CAACC,GAAG,CAAC,SAAQ,GAAIF,MAAM;MAC9B;MACA,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAACJ,MAAM;MACnC,MAAMK,YAAW,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1C;MACAD,YAAY,CAACE,OAAO,CAAEC,OAAO,IAAK;QAChC,IAAI,CAAChB,eAAe,CAACC,CAAC,CAACgB,IAAI,CAACD,OAAO,CAACE,SAAS;QAC7C,IAAI,CAAClB,eAAe,CAACE,CAAC,CAACe,IAAI,CAACD,OAAO,CAACG,aAAa;MACnD,CAAC;MACD;MACA,IAAI,CAACC,eAAe,CAAC;IACvB,CAAC;IACDA,eAAeA,CAAA,EAAG;MAChB,IAAIC,MAAK,GAAI;QACXpB,CAAC,EAAE,IAAI,CAACD,eAAe,CAACC,CAAC;QACzBC,CAAC,EAAE,IAAI,CAACF,eAAe,CAACE,CAAC;QACzBoB,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE;MACR,CAAC;MACD,IAAIxB,IAAG,GAAI,CAACsB,MAAM,CAAC;MACnB,IAAIG,MAAK,GAAI,CAAC;MACd,IAAIC,MAAK,GAAI;QAACC,UAAU,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK;MACrD/B,MAAM,CAACgC,OAAO,CAAC,eAAe,EAAE7B,IAAI,EAAEyB,MAAM,EAAEC,MAAM,CAAC;IACvD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}