{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ScatterPlot from './ScatterPlot';\nimport LinePlot from './LinePlot';\nexport default {\n  components: {\n    ScatterPlot,\n    LinePlot\n  },\n  data: () => ({\n    scatterPlotId: 0,\n    linePlotId: 0,\n    categories: {\n      values: ['All', 'tech', 'health', 'bank'],\n      selectedValue: 'All'\n    },\n    companies: {\n      values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      selectedValue: '1',\n      names: [],\n      companyIdToName: []\n    },\n    algorithm: {\n      values: ['none', 'random', 'regression'],\n      selectedValue: 'none'\n    }\n  }),\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve companies from backend\n      var reqUrl = 'http://127.0.0.1:5000/companies?category=All';\n      console.log('ReqURL ' + reqUrl);\n      // await response and data\n      const response = await fetch(reqUrl);\n      const responseData = await response.json();\n      const companyIdToName = {};\n\n      // get company data\n      responseData.forEach(company => {\n        this.companies.names.push(company.name);\n        companyIdToName[company.id] = company.name;\n        this.companies.companyIdToName = companyIdToName;\n      });\n    },\n    changeCurrentlySelectedCompany(companyId) {\n      this.companies.selectedValue = companyId;\n      this.changeCompany();\n    },\n    changeCategory() {\n      this.scatterPlotId += 1;\n    },\n    changeCompany() {\n      this.linePlotId += 1;\n    },\n    changeAlgorithm() {\n      this.linePlotId += 1;\n    }\n  }\n};","map":{"version":3,"names":["ScatterPlot","LinePlot","components","data","scatterPlotId","linePlotId","categories","values","selectedValue","companies","names","companyIdToName","algorithm","mounted","fetchData","methods","reqUrl","console","log","response","fetch","responseData","json","forEach","company","push","name","id","changeCurrentlySelectedCompany","companyId","changeCompany","changeCategory","changeAlgorithm"],"sources":["/Users/ritawang/Documents/UZH FALL/IVDA/A1/example-project/services/frontend/src/components/ConfigurationPanel.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\" md=\"3\" class=\"sideBar\">\n          <v-row>\n            <v-col cols=\"12\" sm=\"12\">\n              <div class=\"control-panel-font\">Company Overview</div>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-select\n                  :items=\"categories.values\"\n                  label=\"Select a category\"\n                  dense\n                  v-model=\"categories.selectedValue\"\n                  @change=\"changeCategory\"\n              ></v-select>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col cols=\"12\" sm=\"12\">\n              <div class=\"control-panel-font\">Profit View of Company</div>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-select\n                  :items=\"companies.names\"\n                  label=\"Select a company\"\n                  dense\n                  v-model=\"companies.selectedValue\"\n                  @change=\"changeCompany\"\n              ></v-select>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-select\n                  :items=\"algorithm.values\"\n                  label=\"Select an algorithm for prediction\"\n                  dense\n                  v-model=\"algorithm.selectedValue\"\n                  @change=\"changeAlgorithm\"\n              ></v-select>\n            </v-col>\n          </v-row>\n        </v-col>\n        <v-col cols=\"12\" md=\"4\">\n          <ScatterPlot :key=\"scatterPlotId\"\n                       :selectedCategory=\"categories.selectedValue\"\n                       @changeCurrentlySelectedCompany=\"changeCurrentlySelectedCompany\"\n          />\n        </v-col>\n        <v-col cols=\"12\" md=\"4\">\n          <LinePlot :key=\"linePlotId\"\n                    :selectedCompany=\"companies.selectedValue\"\n                    :selectedAlgorithm=\"algorithm.selectedValue\"/>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport ScatterPlot from './ScatterPlot';\nimport LinePlot from './LinePlot';\nexport default {\n  components: {ScatterPlot, LinePlot},\n  data: () => ({\n    scatterPlotId: 0,\n    linePlotId: 0,\n    categories: {\n      values: ['All', 'tech', 'health', 'bank'],\n      selectedValue: 'All'\n    },\n    companies: {\n      values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      selectedValue: '1',\n      names:[],\n      companyIdToName: []\n    },\n    algorithm: {\n      values: ['none', 'random', 'regression'],\n      selectedValue: 'none'\n    }\n  }),\n    mounted() {\n      this.fetchData()\n    },\n  methods: {\n     async fetchData() {\n      // req URL to retrieve companies from backend\n       var reqUrl = 'http://127.0.0.1:5000/companies?category=All'\n        console.log('ReqURL ' + reqUrl)\n        // await response and data\n        const response = await fetch(reqUrl)\n        const responseData = await response.json();\n        const companyIdToName = {};\n\n        // get company data\n        responseData.forEach((company) => {\n          this.companies.names.push(company.name)\n          companyIdToName[company.id] = company.name\n          this.companies.companyIdToName = companyIdToName\n       })\n     },\n    changeCurrentlySelectedCompany(companyId) {\n      this.companies.selectedValue = companyId\n      this.changeCompany()\n    },\n    changeCategory() {\n      this.scatterPlotId += 1\n    },\n    changeCompany() {\n      this.linePlotId += 1\n    },\n    changeAlgorithm() {\n      this.linePlotId += 1\n    }\n  }\n  }\n</script>\n\n<style scoped>\n.control-panel-font {\n  font-family: \"Open Sans\", verdana, arial, sans-serif;\n  align-items: center;\n  font-size: 19px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  display: flex;\n  font-weight: 700;\n  height: 40px;\n}\n.sideBar {\n  border-right: 2px solid rgba(0, 0, 0, 0.1);\n  background: #edeafc;\n  padding-left: 17px;\n  height: calc(100vh - 50px);\n}\n</style>\n\n"],"mappings":";AAkEA,OAAOA,WAAU,MAAO,eAAe;AACvC,OAAOC,QAAO,MAAO,YAAY;AACjC,eAAe;EACbC,UAAU,EAAE;IAACF,WAAW;IAAEC;EAAQ,CAAC;EACnCE,IAAI,EAAEA,CAAA,MAAO;IACXC,aAAa,EAAE,CAAC;IAChBC,UAAU,EAAE,CAAC;IACbC,UAAU,EAAE;MACVC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;MACzCC,aAAa,EAAE;IACjB,CAAC;IACDC,SAAS,EAAE;MACTF,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3DC,aAAa,EAAE,GAAG;MAClBE,KAAK,EAAC,EAAE;MACRC,eAAe,EAAE;IACnB,CAAC;IACDC,SAAS,EAAE;MACTL,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,CAAC;MACxCC,aAAa,EAAE;IACjB;EACF,CAAC,CAAC;EACAK,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC;EACjB,CAAC;EACHC,OAAO,EAAE;IACN,MAAMD,SAASA,CAAA,EAAG;MACjB;MACC,IAAIE,MAAK,GAAI,8CAA6C;MACzDC,OAAO,CAACC,GAAG,CAAC,SAAQ,GAAIF,MAAM;MAC9B;MACA,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAACJ,MAAM;MACnC,MAAMK,YAAW,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1C,MAAMX,eAAc,GAAI,CAAC,CAAC;;MAE1B;MACAU,YAAY,CAACE,OAAO,CAAEC,OAAO,IAAK;QAChC,IAAI,CAACf,SAAS,CAACC,KAAK,CAACe,IAAI,CAACD,OAAO,CAACE,IAAI;QACtCf,eAAe,CAACa,OAAO,CAACG,EAAE,IAAIH,OAAO,CAACE,IAAG;QACzC,IAAI,CAACjB,SAAS,CAACE,eAAc,GAAIA,eAAc;MAClD,CAAC;IACH,CAAC;IACFiB,8BAA8BA,CAACC,SAAS,EAAE;MACxC,IAAI,CAACpB,SAAS,CAACD,aAAY,GAAIqB,SAAQ;MACvC,IAAI,CAACC,aAAa,CAAC;IACrB,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC3B,aAAY,IAAK;IACxB,CAAC;IACD0B,aAAaA,CAAA,EAAG;MACd,IAAI,CAACzB,UAAS,IAAK;IACrB,CAAC;IACD2B,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC3B,UAAS,IAAK;IACrB;EACF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}