{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Plotly from 'plotly.js/dist/plotly';\nexport default {\n  name: \"LinePlot\",\n  props: [\"selectedCompanyId\", \"selectedCompanyName\", \"selectedAlgorithm\"],\n  data: () => ({\n    LinePlotData: {\n      x: [],\n      y: []\n    }\n  }),\n  mounted() {\n    this.fetchData();\n  },\n  watch: {\n    selectedCompanyId() {\n      this.LinePlotData.x = [];\n      this.LinePlotData.y = [];\n      this.fetchData();\n    },\n    selectedAlgorithm() {\n      this.LinePlotData.x = [];\n      this.LinePlotData.y = [];\n      this.fetchData();\n    }\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve single company from backend\n      var reqUrl = 'http://127.0.0.1:5000/companies/' + this.$props.selectedCompanyId + '?algorithm=' + this.$props.selectedAlgorithm;\n      console.log(\"ReqURL \" + reqUrl);\n      // await response and data\n      const response = await fetch(reqUrl);\n      const responseData = await response.json();\n      // transform data to usable by lineplot\n      responseData.profit.forEach(profit => {\n        this.LinePlotData.x.push(profit.year);\n        this.LinePlotData.y.push(profit.value);\n      });\n      // draw the lineplot after the data is transformed\n      this.drawLinePlot();\n    },\n    drawLinePlot() {\n      var trace1 = {\n        x: this.LinePlotData.x,\n        y: this.LinePlotData.y,\n        type: 'scatter'\n      };\n      var data = [trace1];\n      var layout = {\n        xaxis: {\n          title: 'Year'\n        },\n        yaxis: {\n          title: 'Profit'\n        }\n      };\n      var config = {\n        responsive: true,\n        displayModeBar: false\n      };\n      Plotly.newPlot('myLinePlot', data, layout, config);\n    }\n  }\n};","map":{"version":3,"names":["Plotly","name","props","data","LinePlotData","x","y","mounted","fetchData","watch","selectedCompanyId","selectedAlgorithm","methods","reqUrl","$props","console","log","response","fetch","responseData","json","profit","forEach","push","year","value","drawLinePlot","trace1","type","layout","xaxis","title","yaxis","config","responsive","displayModeBar","newPlot"],"sources":["/Users/ritawang/Documents/UZH FALL/IVDA/A1/example-project/services/frontend/src/components/LinePlot.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row align=\"center\" justify=\"center\" class=\"mt-0.5 mb-0\">\n      <h3>Profit View of Company: {{ $props.selectedCompanyName }}</h3>\n    </v-row>\n    <div style=\"height: 90vh; width: 100%\">\n      <div id='myLinePlot' style=\"height: inherit; width: inherit\"></div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport Plotly from 'plotly.js/dist/plotly';\nexport default {\n  name: \"LinePlot\",\n  props: [\"selectedCompanyId\",\"selectedCompanyName\",\"selectedAlgorithm\"],\n  data: () => ({\n    LinePlotData: {x: [], y: []}\n  }),\n  mounted() {\n    this.fetchData()\n  },\n  watch: {\n    selectedCompanyId() {\n      this.LinePlotData.x = [];\n      this.LinePlotData.y = [];\n\n      this.fetchData();\n    },\n    selectedAlgorithm() {\n      this.LinePlotData.x = [];\n      this.LinePlotData.y = [];\n\n      this.fetchData();\n    }\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve single company from backend\n      var reqUrl = 'http://127.0.0.1:5000/companies/' + this.$props.selectedCompanyId +\n          '?algorithm=' + this.$props.selectedAlgorithm\n      console.log(\"ReqURL \" + reqUrl)\n      // await response and data\n      const response = await fetch(reqUrl)\n      const responseData = await response.json();\n      // transform data to usable by lineplot\n      responseData.profit.forEach((profit) => {\n        this.LinePlotData.x.push(profit.year)\n        this.LinePlotData.y.push(profit.value)\n      })\n      // draw the lineplot after the data is transformed\n      this.drawLinePlot()\n    },\n    drawLinePlot() {\n      var trace1 = {\n        x: this.LinePlotData.x,\n        y: this.LinePlotData.y,\n        type: 'scatter'\n      };\n      var data = [trace1];\n      var layout = {\n        xaxis: {\n          title: 'Year'\n        },\n        yaxis: {\n          title: 'Profit'\n        }\n      }\n      var config = {responsive: true, displayModeBar: false}\n      Plotly.newPlot('myLinePlot', data, layout, config);\n\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n\n</style>\n"],"mappings":";AAcA,OAAOA,MAAK,MAAO,uBAAuB;AAC1C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,CAAC,mBAAmB,EAAC,qBAAqB,EAAC,mBAAmB,CAAC;EACtEC,IAAI,EAAEA,CAAA,MAAO;IACXC,YAAY,EAAE;MAACC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE;EAC7B,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC;EACjB,CAAC;EACDC,KAAK,EAAE;IACLC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACN,YAAY,CAACC,CAAA,GAAI,EAAE;MACxB,IAAI,CAACD,YAAY,CAACE,CAAA,GAAI,EAAE;MAExB,IAAI,CAACE,SAAS,CAAC,CAAC;IAClB,CAAC;IACDG,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACP,YAAY,CAACC,CAAA,GAAI,EAAE;MACxB,IAAI,CAACD,YAAY,CAACE,CAAA,GAAI,EAAE;MAExB,IAAI,CAACE,SAAS,CAAC,CAAC;IAClB;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMJ,SAASA,CAAA,EAAG;MAChB;MACA,IAAIK,MAAK,GAAI,kCAAiC,GAAI,IAAI,CAACC,MAAM,CAACJ,iBAAgB,GAC1E,aAAY,GAAI,IAAI,CAACI,MAAM,CAACH,iBAAgB;MAChDI,OAAO,CAACC,GAAG,CAAC,SAAQ,GAAIH,MAAM;MAC9B;MACA,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAACL,MAAM;MACnC,MAAMM,YAAW,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1C;MACAD,YAAY,CAACE,MAAM,CAACC,OAAO,CAAED,MAAM,IAAK;QACtC,IAAI,CAACjB,YAAY,CAACC,CAAC,CAACkB,IAAI,CAACF,MAAM,CAACG,IAAI;QACpC,IAAI,CAACpB,YAAY,CAACE,CAAC,CAACiB,IAAI,CAACF,MAAM,CAACI,KAAK;MACvC,CAAC;MACD;MACA,IAAI,CAACC,YAAY,CAAC;IACpB,CAAC;IACDA,YAAYA,CAAA,EAAG;MACb,IAAIC,MAAK,GAAI;QACXtB,CAAC,EAAE,IAAI,CAACD,YAAY,CAACC,CAAC;QACtBC,CAAC,EAAE,IAAI,CAACF,YAAY,CAACE,CAAC;QACtBsB,IAAI,EAAE;MACR,CAAC;MACD,IAAIzB,IAAG,GAAI,CAACwB,MAAM,CAAC;MACnB,IAAIE,MAAK,GAAI;QACXC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT,CAAC;QACDC,KAAK,EAAE;UACLD,KAAK,EAAE;QACT;MACF;MACA,IAAIE,MAAK,GAAI;QAACC,UAAU,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK;MACrDnC,MAAM,CAACoC,OAAO,CAAC,YAAY,EAAEjC,IAAI,EAAE0B,MAAM,EAAEI,MAAM,CAAC;IAEpD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}